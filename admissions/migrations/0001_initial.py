# Generated by Django 4.2 on 2025-10-26 22:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Question')),
                ('reponse', models.TextField(verbose_name='Réponse')),
                ('categorie', models.CharField(choices=[('admission', 'Admission'), ('financement', 'Financement'), ('programmes', 'Departement'), ('vie_etudiante', 'Vie Étudiante'), ('general', 'Général')], default='general', max_length=50, verbose_name='Catégorie')),
                ('ordre', models.IntegerField(default=0, help_text='Les questions sont affichées par ordre croissant', verbose_name="Ordre d'affichage")),
                ('actif', models.BooleanField(default=True, help_text='Décochez pour masquer cette question', verbose_name='Actif')),
                ('nombre_vues', models.IntegerField(default=0, editable=False, verbose_name='Nombre de vues')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Question Fréquente (FAQ)',
                'verbose_name_plural': 'Questions Fréquentes (FAQ)',
                'ordering': ['ordre', 'categorie'],
            },
        ),
        migrations.CreateModel(
            name='Statistique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.CharField(help_text='Ex: 94%, 2,847, 85%', max_length=20, verbose_name='Valeur')),
                ('label', models.CharField(help_text="Ex: Taux d'Acceptation", max_length=100, verbose_name='Libellé')),
                ('couleur', models.CharField(choices=[('primary', 'Bleu Principal'), ('secondary', 'Orange Secondaire'), ('success', 'Vert Succès'), ('accent', 'Rose Accent'), ('warning', 'Jaune Attention')], default='primary', max_length=20, verbose_name='Couleur')),
                ('ordre', models.IntegerField(default=0, help_text='Les statistiques sont affichées par ordre croissant', verbose_name="Ordre d'affichage")),
                ('actif', models.BooleanField(default=True, help_text='Décochez pour masquer cette statistique', verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Statistique',
                'verbose_name_plural': 'Statistiques',
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='TypeBourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text="Ex: Bourse d'Excellence Académique", max_length=100, verbose_name='Nom de la bourse')),
                ('description', models.TextField(help_text='Description détaillée de la bourse', verbose_name='Description')),
                ('pourcentage', models.IntegerField(help_text='Pourcentage des frais couverts (0-100%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pourcentage de réduction')),
                ('nombre_disponible', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nombre de bourses disponibles')),
                ('couleur', models.CharField(choices=[('primary', 'Bleu Principal'), ('secondary', 'Orange Secondaire'), ('success', 'Vert Succès'), ('accent', 'Rose Accent')], default='primary', max_length=20, verbose_name='Couleur')),
                ('icone_svg', models.TextField(help_text="Code SVG complet de l'icône", verbose_name="Code SVG de l'icône")),
                ('criteres', models.JSONField(default=list, help_text='Liste des critères, ex: ["Moyenne ≥ 15/20", "Dossier complet"]', verbose_name="Critères d'éligibilité")),
                ('actif', models.BooleanField(default=True, verbose_name='Active')),
                ('ordre', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Type de Bourse',
                'verbose_name_plural': 'Types de Bourses',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='VisiteVirtuelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text='Ex: Bibliothèque Centrale', max_length=100, verbose_name='Titre')),
                ('sous_titre', models.CharField(help_text='Ex: 50,000 ouvrages spécialisés', max_length=200, verbose_name='Sous-titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(help_text='Image principale (recommandé: 1200x600px)', upload_to='visites_virtuelles/', verbose_name='Image de couverture')),
                ('url_visite', models.URLField(blank=True, help_text='Lien vers la visite virtuelle interactive', null=True, verbose_name='URL de la visite 360°')),
                ('couleur', models.CharField(choices=[('primary', 'Bleu'), ('secondary', 'Orange'), ('success', 'Vert')], default='primary', max_length=20, verbose_name='Couleur du thème')),
                ('actif', models.BooleanField(default=True, verbose_name='Active')),
                ('ordre', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Visite Virtuelle',
                'verbose_name_plural': 'Visites Virtuelles',
                'ordering': ['ordre', 'titre'],
            },
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de famille')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telephone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Numéro de téléphone invalide. Format: +509XXXXXXXX', regex='^\\+?509?\\d{8,10}$')], verbose_name='Téléphone')),
                ('lettre_motivation', models.TextField(verbose_name='Lettre de motivation')),
                ('accepte_conditions', models.BooleanField(default=False, verbose_name='Conditions acceptées')),
                ('statut', models.CharField(choices=[('brouillon', 'Brouillon'), ('soumis', 'Soumis'), ('en_revision', 'En Révision'), ('accepte', 'Accepté'), ('refuse', 'Refusé')], default='brouillon', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('programme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidatures', to='departments.department', verbose_name='Programme souhaité')),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Ambassadeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom complet')),
                ('photo', models.ImageField(help_text='Photo de profil (recommandé: 400x400px)', upload_to='ambassadeurs/', verbose_name='Photo')),
                ('annee', models.CharField(help_text='Ex: 3ème année, 4ème année', max_length=50, verbose_name="Année d'études")),
                ('temoignage', models.TextField(help_text="Citation courte de l'ambassadeur", verbose_name='Témoignage')),
                ('specialites', models.JSONField(default=list, help_text='Liste des tags, ex: ["Psychologie clinique", "Recherche"]', verbose_name='Spécialités')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email de contact')),
                ('ordre', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('actif', models.BooleanField(default=True, help_text='Décochez pour masquer cet ambassadeur', verbose_name='Actif')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('programme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ambassadeurs', to='departments.department', verbose_name="Programme d'études")),
            ],
            options={
                'verbose_name': 'Ambassadeur Étudiant',
                'verbose_name_plural': 'Ambassadeurs Étudiants',
                'ordering': ['ordre', 'nom'],
            },
        ),
    ]
