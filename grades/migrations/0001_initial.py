# Generated by Django 4.2 on 2025-10-30 19:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('enrollments', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('midterm_exam', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Examen de mi-parcours')),
                ('final_exam', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Examen final')),
                ('assignments', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Travaux/Devoirs')),
                ('participation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Participation')),
                ('project', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Projet')),
                ('final_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Note finale')),
                ('letter_grade', models.CharField(blank=True, max_length=2, verbose_name='Note lettre')),
                ('comments', models.TextField(blank=True, verbose_name='Commentaires')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='grade', to='enrollments.enrollment', verbose_name='Inscription')),
                ('graded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_students', to='accounts.professor', verbose_name='Noté par')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='GradeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=50, verbose_name='Composante')),
                ('old_value', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Ancienne valeur')),
                ('new_value', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name='Nouvelle valeur')),
                ('modified_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de modification')),
                ('reason', models.TextField(blank=True, verbose_name='Raison')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='grades.grade', verbose_name='Note')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.professor', verbose_name='Modifié par')),
            ],
            options={
                'verbose_name': 'Historique de note',
                'verbose_name_plural': 'Historiques de notes',
                'ordering': ['-modified_at'],
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=20, verbose_name='Semestre')),
                ('year', models.IntegerField(verbose_name='Année académique')),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], verbose_name='Moyenne générale (GPA)')),
                ('total_credits_attempted', models.IntegerField(default=0, verbose_name='Crédits tentés')),
                ('total_credits_earned', models.IntegerField(default=0, verbose_name='Crédits obtenus')),
                ('generated_at', models.DateTimeField(auto_now=True, verbose_name='Date de génération')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcripts', to='accounts.student', verbose_name='Étudiant')),
            ],
            options={
                'verbose_name': 'Relevé de notes',
                'verbose_name_plural': 'Relevés de notes',
                'ordering': ['-year', '-semester'],
                'unique_together': {('student', 'semester', 'year')},
            },
        ),
    ]
